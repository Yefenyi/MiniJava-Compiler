// Generated from MiniJava.g4 by ANTLR 4.4
package antlr4;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MiniJavaLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		EQUALS=1, NOTEQUALS=2, LT=3, GT=4, GEQ=5, LEQ=6, AND=7, OR=8, ADD=9, SUB=10, 
		DIVIDE=11, MULTPY=12, BANG=13, ASSIGN=14, DOT=15, LPREN=16, RPREN=17, 
		COMMA=18, LCURL=19, RCURL=20, LBRACKET=21, RBRACKET=22, SEMI=23, NEW=24, 
		THIS=25, NULL=26, TRUE=27, FALSE=28, CLASS=29, EXTENDS=30, PUBLIC=31, 
		STATIC=32, VOID=33, MAIN=34, STRING=35, RETURN=36, INT=37, BOOLEAN=38, 
		IF=39, ELSE=40, WHILE=41, SYSTEMPRINT=42, SYSTEMIN=43, INTEGER=44, OPERATOR=45, 
		DELIMITER=46, ID=47, WS=48, COMMENT=49;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'"
	};
	public static final String[] ruleNames = {
		"EQUALS", "NOTEQUALS", "LT", "GT", "GEQ", "LEQ", "AND", "OR", "ADD", "SUB", 
		"DIVIDE", "MULTPY", "BANG", "ASSIGN", "DOT", "LPREN", "RPREN", "COMMA", 
		"LCURL", "RCURL", "LBRACKET", "RBRACKET", "SEMI", "NEW", "THIS", "NULL", 
		"TRUE", "FALSE", "CLASS", "EXTENDS", "PUBLIC", "STATIC", "VOID", "MAIN", 
		"STRING", "RETURN", "INT", "BOOLEAN", "IF", "ELSE", "WHILE", "SYSTEMPRINT", 
		"SYSTEMIN", "INTEGER", "OPERATOR", "DELIMITER", "ID", "LETTER", "DIGIT", 
		"NONZERODIGIT", "WS", "COMMENT"
	};


	public MiniJavaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MiniJava.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public boolean sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 41: return SYSTEMPRINT_sempred((RuleContext)_localctx, predIndex);
		case 42: return SYSTEMIN_sempred((RuleContext)_localctx, predIndex);
		}
		return true;
	}
	private boolean SYSTEMIN_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 1: return !('A' <= _input.LA(1) && _input.LA(1) <= 'z' || '0' <= _input.LA(1) && _input.LA(1) <= '9');
		}
		return true;
	}
	private boolean SYSTEMPRINT_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0: return !('A' <= _input.LA(1) && _input.LA(1) <= 'z' || '0' <= _input.LA(1) && _input.LA(1) <= '9');
		}
		return true;
	}

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\63\u0182\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\3\2\3\2\3\2\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3"+
		"\7\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3"+
		"\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3"+
		"\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\31\3\32\3\32\3"+
		"\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\35\3"+
		"\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3"+
		"\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3\""+
		"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3"+
		"%\3%\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3)\3)\3)\3)"+
		"\3)\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+"+
		"\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,"+
		"\3,\3,\3-\3-\7-\u0132\n-\f-\16-\u0135\13-\3-\5-\u0138\n-\3.\3.\3.\3.\3"+
		".\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\5.\u0149\n.\3/\3/\3\60\3\60\3\60\7\60"+
		"\u0150\n\60\f\60\16\60\u0153\13\60\3\61\3\61\3\62\3\62\3\63\3\63\3\64"+
		"\6\64\u015c\n\64\r\64\16\64\u015d\3\64\5\64\u0161\n\64\3\64\3\64\3\65"+
		"\3\65\3\65\3\65\7\65\u0169\n\65\f\65\16\65\u016c\13\65\3\65\3\65\3\65"+
		"\3\65\3\65\3\65\7\65\u0174\n\65\f\65\16\65\u0177\13\65\3\65\7\65\u017a"+
		"\n\65\f\65\16\65\u017d\13\65\5\65\u017f\n\65\3\65\3\65\4\u016a\u0175\2"+
		"\66\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35"+
		"\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36"+
		";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\2c\2e\2g\62i\63\3\2\t"+
		"\6\2,-//\61\61>>\13\2*+..\60\60==??]]__}}\177\177\4\2C\\c|\3\2\62;\3\2"+
		"\63;\5\2\13\f\17\17\"\"\4\2\f\f\17\17\u0190\2\3\3\2\2\2\2\5\3\2\2\2\2"+
		"\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2"+
		"\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2"+
		"\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2"+
		"\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2"+
		"\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2"+
		"\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2"+
		"M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3"+
		"\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\3k\3\2\2"+
		"\2\5n\3\2\2\2\7q\3\2\2\2\ts\3\2\2\2\13u\3\2\2\2\rx\3\2\2\2\17{\3\2\2\2"+
		"\21~\3\2\2\2\23\u0081\3\2\2\2\25\u0083\3\2\2\2\27\u0085\3\2\2\2\31\u0087"+
		"\3\2\2\2\33\u0089\3\2\2\2\35\u008b\3\2\2\2\37\u008d\3\2\2\2!\u008f\3\2"+
		"\2\2#\u0091\3\2\2\2%\u0093\3\2\2\2\'\u0095\3\2\2\2)\u0097\3\2\2\2+\u0099"+
		"\3\2\2\2-\u009b\3\2\2\2/\u009d\3\2\2\2\61\u009f\3\2\2\2\63\u00a3\3\2\2"+
		"\2\65\u00a8\3\2\2\2\67\u00ad\3\2\2\29\u00b2\3\2\2\2;\u00b8\3\2\2\2=\u00be"+
		"\3\2\2\2?\u00c6\3\2\2\2A\u00cd\3\2\2\2C\u00d4\3\2\2\2E\u00d9\3\2\2\2G"+
		"\u00de\3\2\2\2I\u00e5\3\2\2\2K\u00ec\3\2\2\2M\u00f0\3\2\2\2O\u00f8\3\2"+
		"\2\2Q\u00fb\3\2\2\2S\u0100\3\2\2\2U\u0106\3\2\2\2W\u011b\3\2\2\2Y\u0137"+
		"\3\2\2\2[\u0148\3\2\2\2]\u014a\3\2\2\2_\u014c\3\2\2\2a\u0154\3\2\2\2c"+
		"\u0156\3\2\2\2e\u0158\3\2\2\2g\u0160\3\2\2\2i\u017e\3\2\2\2kl\7?\2\2l"+
		"m\7?\2\2m\4\3\2\2\2no\7#\2\2op\7?\2\2p\6\3\2\2\2qr\7>\2\2r\b\3\2\2\2s"+
		"t\7@\2\2t\n\3\2\2\2uv\7@\2\2vw\7?\2\2w\f\3\2\2\2xy\7>\2\2yz\7?\2\2z\16"+
		"\3\2\2\2{|\7(\2\2|}\7(\2\2}\20\3\2\2\2~\177\7~\2\2\177\u0080\7~\2\2\u0080"+
		"\22\3\2\2\2\u0081\u0082\7-\2\2\u0082\24\3\2\2\2\u0083\u0084\7/\2\2\u0084"+
		"\26\3\2\2\2\u0085\u0086\7\61\2\2\u0086\30\3\2\2\2\u0087\u0088\7,\2\2\u0088"+
		"\32\3\2\2\2\u0089\u008a\7#\2\2\u008a\34\3\2\2\2\u008b\u008c\7?\2\2\u008c"+
		"\36\3\2\2\2\u008d\u008e\7\60\2\2\u008e \3\2\2\2\u008f\u0090\7*\2\2\u0090"+
		"\"\3\2\2\2\u0091\u0092\7+\2\2\u0092$\3\2\2\2\u0093\u0094\7.\2\2\u0094"+
		"&\3\2\2\2\u0095\u0096\7}\2\2\u0096(\3\2\2\2\u0097\u0098\7\177\2\2\u0098"+
		"*\3\2\2\2\u0099\u009a\7]\2\2\u009a,\3\2\2\2\u009b\u009c\7_\2\2\u009c."+
		"\3\2\2\2\u009d\u009e\7=\2\2\u009e\60\3\2\2\2\u009f\u00a0\7p\2\2\u00a0"+
		"\u00a1\7g\2\2\u00a1\u00a2\7y\2\2\u00a2\62\3\2\2\2\u00a3\u00a4\7v\2\2\u00a4"+
		"\u00a5\7j\2\2\u00a5\u00a6\7k\2\2\u00a6\u00a7\7u\2\2\u00a7\64\3\2\2\2\u00a8"+
		"\u00a9\7p\2\2\u00a9\u00aa\7w\2\2\u00aa\u00ab\7n\2\2\u00ab\u00ac\7n\2\2"+
		"\u00ac\66\3\2\2\2\u00ad\u00ae\7v\2\2\u00ae\u00af\7t\2\2\u00af\u00b0\7"+
		"w\2\2\u00b0\u00b1\7g\2\2\u00b18\3\2\2\2\u00b2\u00b3\7h\2\2\u00b3\u00b4"+
		"\7c\2\2\u00b4\u00b5\7n\2\2\u00b5\u00b6\7u\2\2\u00b6\u00b7\7g\2\2\u00b7"+
		":\3\2\2\2\u00b8\u00b9\7e\2\2\u00b9\u00ba\7n\2\2\u00ba\u00bb\7c\2\2\u00bb"+
		"\u00bc\7u\2\2\u00bc\u00bd\7u\2\2\u00bd<\3\2\2\2\u00be\u00bf\7g\2\2\u00bf"+
		"\u00c0\7z\2\2\u00c0\u00c1\7v\2\2\u00c1\u00c2\7g\2\2\u00c2\u00c3\7p\2\2"+
		"\u00c3\u00c4\7f\2\2\u00c4\u00c5\7u\2\2\u00c5>\3\2\2\2\u00c6\u00c7\7r\2"+
		"\2\u00c7\u00c8\7w\2\2\u00c8\u00c9\7d\2\2\u00c9\u00ca\7n\2\2\u00ca\u00cb"+
		"\7k\2\2\u00cb\u00cc\7e\2\2\u00cc@\3\2\2\2\u00cd\u00ce\7u\2\2\u00ce\u00cf"+
		"\7v\2\2\u00cf\u00d0\7c\2\2\u00d0\u00d1\7v\2\2\u00d1\u00d2\7k\2\2\u00d2"+
		"\u00d3\7e\2\2\u00d3B\3\2\2\2\u00d4\u00d5\7x\2\2\u00d5\u00d6\7q\2\2\u00d6"+
		"\u00d7\7k\2\2\u00d7\u00d8\7f\2\2\u00d8D\3\2\2\2\u00d9\u00da\7o\2\2\u00da"+
		"\u00db\7c\2\2\u00db\u00dc\7k\2\2\u00dc\u00dd\7p\2\2\u00ddF\3\2\2\2\u00de"+
		"\u00df\7U\2\2\u00df\u00e0\7v\2\2\u00e0\u00e1\7t\2\2\u00e1\u00e2\7k\2\2"+
		"\u00e2\u00e3\7p\2\2\u00e3\u00e4\7i\2\2\u00e4H\3\2\2\2\u00e5\u00e6\7t\2"+
		"\2\u00e6\u00e7\7g\2\2\u00e7\u00e8\7v\2\2\u00e8\u00e9\7w\2\2\u00e9\u00ea"+
		"\7t\2\2\u00ea\u00eb\7p\2\2\u00ebJ\3\2\2\2\u00ec\u00ed\7k\2\2\u00ed\u00ee"+
		"\7p\2\2\u00ee\u00ef\7v\2\2\u00efL\3\2\2\2\u00f0\u00f1\7d\2\2\u00f1\u00f2"+
		"\7q\2\2\u00f2\u00f3\7q\2\2\u00f3\u00f4\7n\2\2\u00f4\u00f5\7g\2\2\u00f5"+
		"\u00f6\7c\2\2\u00f6\u00f7\7p\2\2\u00f7N\3\2\2\2\u00f8\u00f9\7k\2\2\u00f9"+
		"\u00fa\7h\2\2\u00faP\3\2\2\2\u00fb\u00fc\7g\2\2\u00fc\u00fd\7n\2\2\u00fd"+
		"\u00fe\7u\2\2\u00fe\u00ff\7g\2\2\u00ffR\3\2\2\2\u0100\u0101\7y\2\2\u0101"+
		"\u0102\7j\2\2\u0102\u0103\7k\2\2\u0103\u0104\7n\2\2\u0104\u0105\7g\2\2"+
		"\u0105T\3\2\2\2\u0106\u0107\7U\2\2\u0107\u0108\7{\2\2\u0108\u0109\7u\2"+
		"\2\u0109\u010a\7v\2\2\u010a\u010b\7g\2\2\u010b\u010c\7o\2\2\u010c\u010d"+
		"\7\60\2\2\u010d\u010e\7q\2\2\u010e\u010f\7w\2\2\u010f\u0110\7v\2\2\u0110"+
		"\u0111\7\60\2\2\u0111\u0112\7r\2\2\u0112\u0113\7t\2\2\u0113\u0114\7k\2"+
		"\2\u0114\u0115\7p\2\2\u0115\u0116\7v\2\2\u0116\u0117\7n\2\2\u0117\u0118"+
		"\7p\2\2\u0118\u0119\3\2\2\2\u0119\u011a\6+\2\2\u011aV\3\2\2\2\u011b\u011c"+
		"\7U\2\2\u011c\u011d\7{\2\2\u011d\u011e\7u\2\2\u011e\u011f\7v\2\2\u011f"+
		"\u0120\7g\2\2\u0120\u0121\7o\2\2\u0121\u0122\7\60\2\2\u0122\u0123\7k\2"+
		"\2\u0123\u0124\7p\2\2\u0124\u0125\7\60\2\2\u0125\u0126\7t\2\2\u0126\u0127"+
		"\7g\2\2\u0127\u0128\7c\2\2\u0128\u0129\7f\2\2\u0129\u012a\7K\2\2\u012a"+
		"\u012b\7p\2\2\u012b\u012c\7v\2\2\u012c\u012d\3\2\2\2\u012d\u012e\6,\3"+
		"\2\u012eX\3\2\2\2\u012f\u0133\5e\63\2\u0130\u0132\5c\62\2\u0131\u0130"+
		"\3\2\2\2\u0132\u0135\3\2\2\2\u0133\u0131\3\2\2\2\u0133\u0134\3\2\2\2\u0134"+
		"\u0138\3\2\2\2\u0135\u0133\3\2\2\2\u0136\u0138\7\62\2\2\u0137\u012f\3"+
		"\2\2\2\u0137\u0136\3\2\2\2\u0138Z\3\2\2\2\u0139\u0149\t\2\2\2\u013a\u013b"+
		"\7>\2\2\u013b\u0149\7?\2\2\u013c\u013d\7@\2\2\u013d\u0149\7?\2\2\u013e"+
		"\u0149\7@\2\2\u013f\u0140\7?\2\2\u0140\u0149\7?\2\2\u0141\u0142\7#\2\2"+
		"\u0142\u0149\7?\2\2\u0143\u0144\7(\2\2\u0144\u0149\7(\2\2\u0145\u0146"+
		"\7~\2\2\u0146\u0149\7~\2\2\u0147\u0149\7#\2\2\u0148\u0139\3\2\2\2\u0148"+
		"\u013a\3\2\2\2\u0148\u013c\3\2\2\2\u0148\u013e\3\2\2\2\u0148\u013f\3\2"+
		"\2\2\u0148\u0141\3\2\2\2\u0148\u0143\3\2\2\2\u0148\u0145\3\2\2\2\u0148"+
		"\u0147\3\2\2\2\u0149\\\3\2\2\2\u014a\u014b\t\3\2\2\u014b^\3\2\2\2\u014c"+
		"\u0151\5a\61\2\u014d\u0150\5a\61\2\u014e\u0150\5c\62\2\u014f\u014d\3\2"+
		"\2\2\u014f\u014e\3\2\2\2\u0150\u0153\3\2\2\2\u0151\u014f\3\2\2\2\u0151"+
		"\u0152\3\2\2\2\u0152`\3\2\2\2\u0153\u0151\3\2\2\2\u0154\u0155\t\4\2\2"+
		"\u0155b\3\2\2\2\u0156\u0157\t\5\2\2\u0157d\3\2\2\2\u0158\u0159\t\6\2\2"+
		"\u0159f\3\2\2\2\u015a\u015c\t\7\2\2\u015b\u015a\3\2\2\2\u015c\u015d\3"+
		"\2\2\2\u015d\u015b\3\2\2\2\u015d\u015e\3\2\2\2\u015e\u0161\3\2\2\2\u015f"+
		"\u0161\5i\65\2\u0160\u015b\3\2\2\2\u0160\u015f\3\2\2\2\u0161\u0162\3\2"+
		"\2\2\u0162\u0163\b\64\2\2\u0163h\3\2\2\2\u0164\u0165\7\61\2\2\u0165\u0166"+
		"\7,\2\2\u0166\u016a\3\2\2\2\u0167\u0169\13\2\2\2\u0168\u0167\3\2\2\2\u0169"+
		"\u016c\3\2\2\2\u016a\u016b\3\2\2\2\u016a\u0168\3\2\2\2\u016b\u016d\3\2"+
		"\2\2\u016c\u016a\3\2\2\2\u016d\u016e\7,\2\2\u016e\u017f\7\61\2\2\u016f"+
		"\u0170\7\61\2\2\u0170\u0171\7\61\2\2\u0171\u0175\3\2\2\2\u0172\u0174\13"+
		"\2\2\2\u0173\u0172\3\2\2\2\u0174\u0177\3\2\2\2\u0175\u0176\3\2\2\2\u0175"+
		"\u0173\3\2\2\2\u0176\u017b\3\2\2\2\u0177\u0175\3\2\2\2\u0178\u017a\n\b"+
		"\2\2\u0179\u0178\3\2\2\2\u017a\u017d\3\2\2\2\u017b\u0179\3\2\2\2\u017b"+
		"\u017c\3\2\2\2\u017c\u017f\3\2\2\2\u017d\u017b\3\2\2\2\u017e\u0164\3\2"+
		"\2\2\u017e\u016f\3\2\2\2\u017f\u0180\3\2\2\2\u0180\u0181\b\65\2\2\u0181"+
		"j\3\2\2\2\16\2\u0133\u0137\u0148\u014f\u0151\u015d\u0160\u016a\u0175\u017b"+
		"\u017e\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}