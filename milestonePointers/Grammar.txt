//Grammar Rules taken from our parser generator
// note |; indicates  or Epsilion
//Expression equations
//Equal operators
eQE: cE(EQUALS|NOTEQUALS)cE 
	| cE;
cE: aOE cEP;
//Comparisons
cEP: (LT|GT|GEQ|LEQ) aOE cEP
	|;
aOE: aSE aOEP;
aOEP: (AND|OR) aSE aOEP
	|;
aSE: mDE aSEP;
aSEP: (ADD|SUB) mDE aSEP
	|;
mDE: nE mDEP;
mDEP: (DIVIDE|MULTPY) nE mDEP
	|;
//Not expressions
nE: (SUB|BANG) nE | dE;
//method calls
dE: hPE dEP;
dEP: DOT ID LPREN (/*nothing*/|eQE (COMMA eQE)*) RPREN dEP
	|;
hPE: NEW ID LPREN RPREN
| ID
| THIS
| INTEGER
| NULL
| TRUE
| FALSE
| LPREN eQE RPREN;

//The formal gramer other than expressions
program: mainClassDecl classDecl*; 
mainClassDecl: CLASS ID LCURL PUBLIC STATIC VOID MAIN LPREN STRING 
	LBRACKET RBRACKET ID RPREN LCURL stmt* RCURL RCURL;
classDecl: CLASS ID (/*nothing*/|(LBRACKET EXTENDS ID RBRACKET)) LCURL
classVarDecl* methodDecl* RCURL; 
classVarDecl: type ID SEMI;
methodDecl: PUBLIC type ID LPREN (/*nothing*/|formal (COMMA formal)*) RPREN
	LCURL stmt* RETURN eQE SEMI RCURL;
type: INT|BOOLEAN|ID;
formal: type ID;
stmt: type ID ASSIGN eQE SEMI
	|LCURL stmt* RCURL
	|IF LPREN eQE RPREN stmt ELSE stmt
	|WHILE LPREN eQE RPREN stmt
	|SYSTEMPRINT LPREN eQE RPREN SEMI
	|ID ASSIGN eQE SEMI;
	
	
//First sets
Non-Terminal Symbol |	First Set
EQUALS			EQUALS
NOTEQUALS		NOTEQUALS
ε				ε
LT				LT
GT				GT
GEQ				GEQ
LEQ				LEQ
AND				AND
OR				OR
ADD				ADD
SUB				SUB
DIVIDE			DIVIDE
MULTPY			MULTPY
BANG			BANG
DOT				DOT
ID				ID
LPREN			LPREN
RPREN			RPREN
COMMA			COMMA
NEW				NEW
THIS			THIS
INTEGER			INTEGER
NULL			NULL
TRUE			TRUE
FALSE			FALSE
mainClassDec	mainClassDec
classDec		classDec
CLASS			CLASS
LCURL			LCURL
PUBLIC			PUBLIC
STATIC			STATIC
VOID			VOID
MAIN			MAIN
STRING			STRING
LBRACKET		LBRACKET
RBRACKET		RBRACKET
RCURL			RCURL
EXTENDS			EXTENDS
RETURN			RETURN
SEMI			SEMI
INT				INT
BOOLEAN			BOOLEAN
ASSIGN			ASSIGN
IF				IF
ELSE			ELSE
WHILE			WHILE
SYSTEMPRINT		SYSTEMPRINT
eQEOPS			EQUALS, NOTEQUALS
cEP				ε, LT, GT, GEQ, LEQ
cEPOPS			LT, GT, GEQ, LEQ
aOEP			ε, AND, OR
aOEPOPS			AND, OR
aSEP			ε, ADD, SUB
aSEPOPS			ADD, SUB
mDEP			ε, DIVIDE, MULTPY
mDEPOPS			DIVIDE, MULTPY
nEOPS			SUB, BANG
dEP				DOT, ε
ARGS			ε, SUB, BANG, NEW, ID, THIS, INTEGER, NULL, TRUE, FALSE, LPREN
hPE				NEW, ID, THIS, INTEGER, NULL, TRUE, FALSE, LPREN
program			mainClassDec, classDec, ε
classes			classDec, ε
mainClassDecl	CLASS
stmts			ε, LCURL, IF, WHILE, SYSTEMPRINT, ID, INT, BOOLEAN
classDecl		CLASS
classVars		ε, INT, BOOLEAN, ID
methodDecs		ε, PUBLIC
methodDecl		PUBLIC
formals			ε, INT, BOOLEAN, ID
type			INT, BOOLEAN, ID
stmt			LCURL, IF, WHILE, SYSTEMPRINT, ID, INT, BOOLEAN
nE				SUB, BANG, NEW, ID, THIS, INTEGER, NULL, TRUE, FALSE, LPREN
dE				NEW, ID, THIS, INTEGER, NULL, TRUE, FALSE, LPREN
classVarDecl	INT, BOOLEAN, ID
formal			INT, BOOLEAN, ID
formalsc		INT, BOOLEAN, ID
mDE				SUB, BANG, NEW, ID, THIS, INTEGER, NULL, TRUE, FALSE, LPREN
aSE				SUB, BANG, NEW, ID, THIS, INTEGER, NULL, TRUE, FALSE, LPREN
aOE				SUB, BANG, NEW, ID, THIS, INTEGER, NULL, TRUE, FALSE, LPREN
cE				SUB, BANG, NEW, ID, THIS, INTEGER, NULL, TRUE, FALSE, LPREN
eQE				SUB, BANG, NEW, ID, THIS, INTEGER, NULL, TRUE, FALSE, LPREN
ARGSC			SUB, BANG, NEW, ID, THIS, INTEGER, NULL, TRUE, FALSE, LPREN

//Follow sets
eQE				$, SEMI, RPREN, COMMA
eQEOPS			SUB, BANG, NEW, ID, THIS, INTEGER, NULL, TRUE, FALSE, LPREN
cE				EQUALS, NOTEQUALS, $, SEMI, RPREN, COMMA
cEP				EQUALS, NOTEQUALS, $, SEMI, RPREN, COMMA
cEPOPS			SUB, BANG, NEW, ID, THIS, INTEGER, NULL, TRUE, FALSE, LPREN
aOE				LT, GT, GEQ, LEQ, EQUALS, NOTEQUALS, $, SEMI, RPREN, COMMA
aOEP			LT, GT, GEQ, LEQ, EQUALS, NOTEQUALS, $, SEMI, RPREN, COMMA
aOEPOPS			SUB, BANG, NEW, ID, THIS, INTEGER, NULL, TRUE, FALSE, LPREN
aSE				AND, OR, LT, GT, GEQ, LEQ, EQUALS, NOTEQUALS, $, SEMI, RPREN, COMMA
aSEP			AND, OR, LT, GT, GEQ, LEQ, EQUALS, NOTEQUALS, $, SEMI, RPREN, COMMA
aSEPOPS			SUB, BANG, NEW, ID, THIS, INTEGER, NULL, TRUE, FALSE, LPREN
mDE				ADD, SUB, AND, OR, LT, GT, GEQ, LEQ, EQUALS, NOTEQUALS, $, SEMI, RPREN, COMMA
mDEP			ADD, SUB, AND, OR, LT, GT, GEQ, LEQ, EQUALS, NOTEQUALS, $, SEMI, RPREN, COMMA
mDEPOPS			SUB, BANG, NEW, ID, THIS, INTEGER, NULL, TRUE, FALSE, LPREN
nE				DIVIDE, MULTPY, ADD, SUB, AND, OR, LT, GT, GEQ, LEQ, EQUALS, NOTEQUALS, $, SEMI, RPREN, COMMA
nEOPS			SUB, BANG, NEW, ID, THIS, INTEGER, NULL, TRUE, FALSE, LPREN
dE				DIVIDE, MULTPY, ADD, SUB, AND, OR, LT, GT, GEQ, LEQ, EQUALS, NOTEQUALS, $, SEMI, RPREN, COMMA
dEP				DIVIDE, MULTPY, ADD, SUB, AND, OR, LT, GT, GEQ, LEQ, EQUALS, NOTEQUALS, $, SEMI, RPREN, COMMA
ARGS			RPREN
ARGSC			RPREN
hPE				DOT, DIVIDE, MULTPY, ADD, SUB, AND, OR, LT, GT, GEQ, LEQ, EQUALS, NOTEQUALS, $, SEMI, RPREN, COMMA
program	
classes	
mainClassDecl	
stmts			RCURL, RETURN
classDecl	
classVars		LBRACKET, PUBLIC
classVarDecl	INT, BOOLEAN, ID, LBRACKET, PUBLIC
methodDecs		RCURL
methodDecl		PUBLIC, RCURL
formals			RPREN
formalsc		RPREN
type			ID
formal			COMMA, RPREN
stmt			ELSE, LCURL, IF, WHILE, SYSTEMPRINT, ID, INT, BOOLEAN, RCURL, RETURN

/* used to generate first/Follow sets
 
eQE-> cE eQEOPS cE | cE
eQEOPS ->  EQUALS | NOTEQUALS
cE-> aOE cEP
cEP->  cEPOPS aOE cEP | EPSILON
cEPOPS->  LT | GT | GEQ | LEQ
aOE-> aSE aOEP
aOEP-> aOEPOPS aSE aOEP | EPSILON
aOEPOPS-> AND | OR 
aSE-> mDE aSEP
aSEP-> aSEPOPS mDE aSEP	| EPSILON
aSEPOPS-> ADD | SUB
mDE-> nE mDEP
mDEP-> mDEPOPS nE mDEP | EPSILON
mDEPOPS-> DIVIDE | MULTPY
nE-> nEOPS nE | dE
nEOPS-> SUB | BANG
dE-> hPE dEP
dEP-> DOT ID LPREN ARGS RPREN dEP | EPSILON
ARGS-> eQE | eQE COMMA ARGSC | EPSILON
ARGSC-> eQE | eQE COMMA ARGSC
hPE-> NEW ID LPREN RPREN | ID | THIS | INTEGER | NULL | TRUE | FALSE | LPREN eQE RPREN

program-> mainClassDec | classes
classes-> classDec classes | EPSILON
mainClassDecl-> CLASS ID LCURL PUBLIC STATIC VOID MAIN LPREN STRING LBRACKET RBRACKET ID RPREN LCURL stmt stmts RCURL RCURL
stmts->stmt stmts | EPSILON
classDecl-> CLASS ID LBRACKET EXTENDS ID RBRACKET LCURL classVars methodDecs RCURL
classVars-> classVarDecl classVars | EPSILON
classVarDecl-> type ID
methodDecs-> methodDecl methodDecs | EPSILON
methodDecl-> PUBLIC type ID LPREN formals RPREN LCURL stmts RETURN eQE SEMI RCURL
formals-> formal | formal COMMA formalsc | EPSILON
formalsc-> formal | formal COMMA formalsc
type-> INT | BOOLEAN | ID
formal-> type ID
stmt-> type ID ASSIGN eQE SEMI | LCURL stmts RCURL | IF LPREN eQE RPREN stmt ELSE stmt | WHILE LPREN eQE RPREN stmt | SYSTEMPRINT LPREN eQE RPREN SEMI | ID ASSIGN eQE SEMI
*/